# K8Helper 统一配置文件
# 基础应用配置
app:
  name: "k8helper"
  version: "0.1.0"
  debug: false
  
# API服务配置
api:
  host: "0.0.0.0"
  port: 8080
  reload: true
  cors:
    allow_origins: ["*"]
    allow_credentials: true
    allow_methods: ["*"]
    allow_headers: ["*"]

# Kubernetes配置
kubernetes:
  config_path: "~/.kube/config"
  namespace: "default"

# 腾讯云配置
tencent:
  secret_id: ""
  secret_key: ""
  region: "ap-guangzhou"

# LLM配置
llm:
  hunyuan:
    api_key: ""
    secret_key: "" // 可忽略
  openai:
    api_key: ""

# 日志配置
logging:
  level: "INFO"
  log_dir: "logs"
  file_name: "k8helper.log"

# 安全配置
security:
  super_admin_mode: false
  dangerous_commands:
    - "delete"
    - "remove"
    - "rm"
    - "destroy"
    - "kill"
    - "terminate"
    - "patch"
    - "replace"
    - "edit"
  
  safe_commands:
    - "get"
    - "describe"
    - "logs"
    - "top"
    - "version"
    - "cluster-info"
    - "api-resources"
    - "api-versions"
    - "config"
    - "explain"
  
  safe_create_resources:
    - "namespace"
    - "ns"
    - "configmap"
    - "cm"
    - "secret"
    - "pod"
    - "pods"
    - "deployment"
    - "deploy"
    - "service"
    - "svc"
    - "job"
    - "cronjob"
  
  safe_scale_resources:
    - "deployment"
    - "deploy"
    - "replicaset"
    - "rs"
    - "statefulset"
    - "sts"
  
  safe_apply_resources:
    - "namespace"
    - "ns"
    - "configmap"
    - "cm"
    - "secret"
    - "pod"
    - "pods"
    - "deployment"
    - "deploy"
    - "service"
    - "svc"
    - "job"
    - "cronjob"

# Kubernetes API服务配置
services:
  - name: kubernetes
    type: provider
    endpoints:
      - name: list_pods
        path: /api/v1/pods
        method: GET
      - name: get_pod_details
        path: /api/v1/namespaces/{namespace}/pods/{name}
        method: GET
      - name: create_deployment
        path: /apis/apps/v1/namespaces/{namespace}/deployments
        method: POST
      - name: list_deployments
        path: /apis/apps/v1/namespaces/{namespace}/deployments
        method: GET
      - name: get_logs
        path: /api/v1/namespaces/{namespace}/pods/{name}/log
        method: GET
      - name: list_services
        path: /api/v1/namespaces/{namespace}/services
        method: GET
      - name: list_configmaps
        path: /api/v1/namespaces/{namespace}/configmaps
        method: GET
      - name: list_secrets
        path: /api/v1/namespaces/{namespace}/secrets
        method: GET

# MCP工具配置
tools:
  - name: pod_analyzer
    description: 分析 Pod 状态和问题
    input_schema:
      type: object
      properties:
        pod_name:
          type: string
        namespace:
          type: string
    output_schema:
      type: object
      properties:
        status:
          type: string
        issues:
          type: array
          items:
            type: string
        recommendations:
          type: array
          items:
            type: string

  - name: resource_creator
    description: 创建 Kubernetes 资源
    input_schema:
      type: object
      properties:
        resource_type:
          type: string
        namespace:
          type: string
        manifest:
          type: object
    output_schema:
      type: object
      properties:
        status:
          type: string
        resource_name:
          type: string
        message:
          type: string

  - name: cluster_analyzer
    description: 分析集群状态和资源使用情况
    input_schema:
      type: object
      properties:
        namespace:
          type: string
    output_schema:
      type: object
      properties:
        status:
          type: string
        resource_usage:
          type: object
        issues:
          type: array
          items:
            type: string
        recommendations:
          type: array
          items:
            type: string

  - name: log_analyzer
    description: 分析 Pod 日志并识别问题
    input_schema:
      type: object
      properties:
        pod_name:
          type: string
        namespace:
          type: string
        time_range:
          type: string
    output_schema:
      type: object
      properties:
        status:
          type: string
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        recommendations:
          type: array
          items:
            type: string

# Docker配置
docker:
  image_name: "k8helper"
  exposed_port: 8080
  environment:
    PYTHONPATH: "/app"
    DEBUG: "false"
    API_HOST: "0.0.0.0"
    API_PORT: "8080" 
